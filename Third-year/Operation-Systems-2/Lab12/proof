1 случай (без мутексов)
Без мьютексов мы можем взаимодействовать между потоками только посредством обращения к общей памяти.
Когда первый поток закончил печатать, он должен проинформировать второй поток, чтобы тот начал печатать, 
он это может сделать посредством выставления какого-нибудь флага, второй же поток может понять, 
что настало его время печатать посредством проверки этого флага, т.е он должен в цикле постоянно читать какое 
сейчас лежит значение в данной ячейке – это холостой цикл.

2 случай (1 мутекс)
Для печати один поток лочит мутекс, а второй блокируется при попытке залочить его, далее поток отдает этот
мутекс (и в идеале второй поток лочит его и печатает), но может получиться так, что первый поток отдаст мутекс, 
второй поток не успеет его залочить и первый опять его залочит

3 случай (2 мутекса)
Предположим, что один поток не держит ни одного мутекса, тогда второй держит 0, 1 или 2 мутекса
Если второй не держит ни одного - существует ситуация, когда этот поток не будет останавливаться(случай 2)
если у потока достаточно процессорного времени, он может отдать и опять захватить мутекс
Получили, что у каждого потока должен быть хотябы один мутекс. 

Если второй держит 2 - симметрично
Ну и случай с дедлоком, когда один держит 1, лочится на 2. Второй держит 2 и лочится на 1

Если второй держит 1 : для смены состояния мы должны что-то сделать с нашим текущим состоянием(отдать или забрать мутекс). 
Но любой вариант приводит к вышеописанным ситуациям, получили, что требуется 3 мутекса.

