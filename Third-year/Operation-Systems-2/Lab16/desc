Именованные семафоры создаются функцией sem_open(3RT).  При помощи этой же функции можно получить доступ к уже 
существующему именованному семафору.  Эта функция имеет два обязательных параметра и два необязательных:
const char * name – имя семафора.  Имя должно начинаться с символа ‘/’ и не должно содержать других 
символов ‘/’.  Рекомендуется, чтобы имя не превышало 14 символов.  В зависимости от реализации, объект с 
таким именем может либо появляться либо не появляться в корневом каталоге корневой файловой системы 
(в Solaris и Linux не появляется).  В любом случае, для создания семафора не обязательно иметь право создания 
файлов в корневом каталоге.
int flags – флаги.  Может принимать значения 0, O_CREAT и O_CREAT|O_EXCL, где O_CREAT и O_EXCL – константы, 
определенные в <sys/fcntl.h>.  Смысл этих значений аналогичен соответствующим значениям флагов в параметрах 
open(2).  0 означает попытку доступа к уже существующему семафору, O_CREAT – доступ к существующему семафору 
или попытку создания, если такого семафора нет, O_EXCL – ошибку, если при попытке создания обнаруживается, что 
такой семафор уже существует.
mode_t mode – необязательный параметр, который используется, только если flags содержит бит O_CREAT.  
Обозначает права доступа к семафору, которые задаются девятибитовой маской доступа, похожей на маску доступа 
к файлам.  Как и у файла, у семафора есть идентификаторы хозяина и группы.  Идентификатор хозяина устанавливается 
равным эффективному идентификатору пользователя процесса, создавшего семафор, идентификатор группы – эффективному 
идентификатору группы процесса.
unsigned int value – необязательный параметр, который используется только если flags содержит бит O_CREAT.  
Содержит начальное значение флаговой переменной семафора при его создании.
Функция sem_open(3RT) возвращает указатель на семафор (sem_t *).  При ошибке она возвращает нулевой указатель 
и устанавливает errno.  Если процесс попытается несколько раз открыть один и тот же семафор, ему будут 
возвращать один и тот же указатель.  Именованные семафоры всегда разделяемые между процессами.  
При доступе к существующему семафору проверяются права доступа по той же схеме, по которой в 
Unix-системам проверяются права доступа к файлам.  Для доступа к семафору процесс должен иметь права чтения 
и записи. 
Для отсоединения от семафора и освобождения памяти из-под него необходимо использовать функцию sem_close(3RT).  
Эта функция неявно вызывается при exit(2) и exec(2).  Однако закрытие именованного семафора процессом не 
прекращает существования семафора.  Чтобы удалить семафор, необходимо вызвать функцию sem_unlink(3RT).  
Это лишит новые процессы возможность видеть семафор как существующий (попытка исполнить sem_open с именем 
этого семафора без флага O_CREAT приведет к ошибке) и позволит создать новый семафор с тем же именем.  
Однако если в момент sem_unlink(3RT) один или несколько процессов работали с семафором, семафор продолжит 
свое существование до момента, пока все эти процессы не выполнят sem_close(3RT).  Исполнять sem_unlink(3RT) 
могут только владелец семафора и суперпользователь.
Во всем остальном именованный семафор не отличается от неименованного.  Над ним можно выполнять те же операции, 
что и над неименованным, при помощи тех же самых функций.
Стандартного API для получения списка именованных семафоров, существующих в системе, не существует.  
Разумеется, полный список этих объектов существует в ядре и может быть получен через API для доступа 
к структурам данных ядра, но эти API различаются в разных операционных системах.

sem_open - initialize and open a named semaphore
The owner (user ID) of the semaphore is set to the effective user ID of the calling process
If O_CREAT is specified in oflag, then two additional arguments must besupplied.  
The mode argument specifies the permissions to be placed on the new semaphore, as for open(2).

ERRORS
       EACCES The semaphore exists, but the caller does not have permission to open it.

       EEXIST Both O_CREAT and O_EXCL were specified in oflag, but a semaphore with this name already exists.

       EINVAL value was greater than SEM_VALUE_MAX.

       EINVAL name consists of just "/", followed by no other characters.

       EMFILE The per-process limit on the number of open file descriptors has been reached.

       ENAMETOOLONG name was too long.

       ENFILE The system-wide limit on the total number of open files has been
              reached.
               ENOENT The O_CREAT flag was not specified in  oflag  and  no  semaphore
              with  this  name  exists;  or,  O_CREAT  was specified, but name
              wasnt well formed.

       ENOMEM Insufficient memory. недостаточно памяти

sem_close - close a named semaphore
ERRORS EINVAL sem is not a valid semaphore.

/dev/shm - создаются семафоры