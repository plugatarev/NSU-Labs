import lingo/pegcode/driver;

ArExpr ::= ArSum, ArMult, ArInt;
    ArSum(lhs:ArExpr, rhs:ArExpr);
    ArMult(lhs:ArExpr, rhs:ArExpr);
    ArInt(val:int);

s2ar(str: string) -> ArExpr {
    e_gr = "#include arith.lingo";
    parsic(
        compilePegGrammar(e_gr),
        str,
        defaultPegActions
    );
}

ar2s(exp: ArExpr) -> string {
    switch (exp) {
        ArSum(lhs, rhs) : "(" + ar2s(lhs) + " + " + ar2s(rhs) + ")";
        ArMult(lhs, rhs) : "(" + ar2s(lhs) + " * " + ar2s(rhs) + ")";
        ArInt(val): i2s(val);
    }
}

solve(expr: ArExpr) -> int {
    switch (expr) {
        ArSum(lhs, rhs) : solve(lhs) + solve(rhs);
        ArMult(lhs, rhs) : solve(lhs) * solve(rhs);
        ArInt(val): val;
    }
}

main() {
    example = "(((3 + 1) * 9) + ((12 + 2) * 2))";
    println(ar2s(s2ar(example)));
    println(solve(s2ar(example)));
}
